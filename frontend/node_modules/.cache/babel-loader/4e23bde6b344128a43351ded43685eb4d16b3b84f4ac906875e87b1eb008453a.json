{"ast":null,"code":"var _jsxFileName = \"C:\\\\airfly\\\\frontend\\\\src\\\\components\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport airportsData from '../data/airports'; // Importing the airports data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [search, setSearch] = useState({\n    from: '',\n    to: '',\n    date: ''\n  });\n\n  // Handler for form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'from' || name === 'to') {\n      // Find the airport code for the selected city\n      const airportCode = airportsData.find(city => city.city === value).airports[0].code;\n      setSearch(prevSearch => ({\n        ...prevSearch,\n        [name]: `${value} (${airportCode})`\n      }));\n    } else {\n      setSearch(prevSearch => ({\n        ...prevSearch,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handler for form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would handle the submission, e.g., making an API call\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Flight Booking System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"from\",\n        children: \"From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"from\",\n        onChange: handleChange,\n        value: search.from,\n        children: airportsData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: entry.city,\n          children: entry.city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        onChange: handleChange,\n        value: search.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"maVTcPwg4u8ktSvj2TMpLpfHpEE=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","airportsData","jsxDEV","_jsxDEV","SearchPage","_s","search","setSearch","from","to","date","handleChange","e","name","value","target","airportCode","find","city","airports","code","prevSearch","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","entry","index","type","_c","$RefreshReg$"],"sources":["C:/airfly/frontend/src/components/SearchPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport airportsData from '../data/airports'; // Importing the airports data\r\n\r\nconst SearchPage = () => {\r\n  const [search, setSearch] = useState({\r\n    from: '',\r\n    to: '',\r\n    date: ''\r\n  });\r\n\r\n  // Handler for form field changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'from' || name === 'to') {\r\n      // Find the airport code for the selected city\r\n      const airportCode = airportsData.find(city => city.city === value).airports[0].code;\r\n      setSearch(prevSearch => ({\r\n        ...prevSearch,\r\n        [name]: `${value} (${airportCode})`\r\n      }));\r\n    } else {\r\n      setSearch(prevSearch => ({\r\n        ...prevSearch,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n\r\n   // Handler for form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Here you would handle the submission, e.g., making an API call\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Flight Booking System</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Dropdown for selecting the departure city */}\r\n        <label htmlFor=\"from\">From</label>\r\n        <select name=\"from\" onChange={handleChange} value={search.from}>\r\n          {/* Mapping through the airportsData to create select options */}\r\n          {airportsData.map((entry, index) => (\r\n            <option key={index} value={entry.city}>\r\n              {entry.city}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            onChange={handleChange}\r\n            value={search.date}\r\n        />\r\n\r\n        <button type=\"submit\">Buscar</button>\r\n        </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}